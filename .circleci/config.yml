version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.6
  kubernetes: circleci/kubernetes@0.12.1
  aws-eks: circleci/aws-eks@1.1.0

jobs:
  test:
    docker:
      - image: node:14.17.0-alpine
    steps:
      - checkout
      - run:
          name: Set up
          command: |
            npm ci
      - run:
          name: Test coverage
          command: |
            npm run test:cov

  # build:
  #   docker:
  #     - image: circleci/python:3.6.1
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - aws-cli/install
  #     - aws-cli/setup
  #     - run:
  #         name: Create ECR repo if missing
  #         command: |
  #           export AWS_ECR_CREATE_REPO_RESPONSE=$(aws ecr create-repository --repository-name hugo-test --image-scanning-configuration scanOnPush=true 2>&1)
  #           echo $AWS_ECR_CREATE_REPO_RESPONSE
  #     - run:
  #         name: Build and Push Docker Image
  #         command: |
  #           docker login --username AWS --password $(aws ecr get-login-password --region $AWS_DEFAULT_REGION) $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  #           docker build -f ./docker/app/Dockerfile.prod -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/hugo-test:$CIRCLE_SHA1 .
  #           docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/hugo-test:$CIRCLE_SHA1

  deploy:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - aws-cli/install
      - aws-cli/setup
      - kubernetes/install-kubectl
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: $CLUSTER_NAME
      - run:
          name: set up dependencies
          command: |
            curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            sudo mv aws-iam-authenticator /usr/local/bin/
            sudo wget -q https://github.com/viaduct-ai/kustomize-sops/releases/download/v3.0.1/ksops_3.0.1_Linux_x86_64.tar.gz
            tar -zxvf ksops_3.0.1_Linux_x86_64.tar.gz
            sudo mv ksops /usr/local/bin/
            export KUSTOMIZE_VERSION="v3.10.0"
            wget -q https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64.tar.gz -O - | tar -xzO > /usr/local/bin/kustomize \
            chmod +x /usr/local/bin/kustomize
      - run:
          name: debug
          command: |
            kubectl cluster-info
      - run:
          name: deploy
          command: |
            export XDG_CONFIG_HOME=$HOME/.config
            cd deployment
            kustomize build --enable-alpha-plugins . > manifest.yaml
            kubectl apply -f ./manifest.yaml

workflows:
  ci_test:
    jobs:
      # - test
      # - build:
      #     requires:
      #       - test
      - deploy
